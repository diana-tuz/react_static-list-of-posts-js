{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"iw8IAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtBA,EAAKC,MACFD,EAAKE,OAER,mBAAGC,UAAU,WAAWC,KAAI,iBAAYJ,EAAKE,OAA7C,SACGF,EAAKC,QCLGI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKH,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACGG,EAAQL,MACT,wBAAQE,UAAU,oBAAlB,SACGG,EAAQL,OAIV,OACAK,EAAQJ,OACT,mBACEC,UAAU,qBACVC,KAAI,iBAAYE,EAAQJ,OAF1B,SAIGI,EAAQJ,WAMZI,EAAQC,MACT,qBAAKJ,UAAU,oBAAf,SACGG,EAAQC,WCrBFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAEzB,qBAAKN,UAAU,cAAf,SACGM,GAAYA,EAASC,KAAI,SAAAJ,GAAO,OAC/B,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQK,UCHrCC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKV,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACGU,EAAKC,OAEJ,oBAAIX,UAAU,kBAAd,SACGU,EAAKC,QAGV,8BACG,eACD,cAAC,EAAD,CAAUd,KAAMa,EAAKb,aAGzB,mBAAGG,UAAU,iBAAb,SACGU,EAAKN,OAEPM,EAAKJ,SAASM,OAAS,EAEpB,cAAC,EAAD,CAAaN,SAAUI,EAAKJ,WAG5B,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCCzBGO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,GAASA,EAAMP,KAAI,SAAAG,GAAI,OACtB,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,U,qBCWtC,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACjCA,GADiC,IAEpCb,MAXemB,EAWDN,EAAKM,OAVZC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAC3C,MAULV,UAPmBa,EAOGT,EAAKF,GANpBY,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAAqBA,EALJH,KAeJM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e513663b.chunk.js","sourcesContent":["export const UserInfo = ({ user }) => (\n  user.name\n  && user.email\n  && (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n  )\n);\n","export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      {comment.name && (\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n      )}\n\n      {' by '}\n      {comment.email && (\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n      )}\n\n    </div>\n\n    {comment.body && (\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n    )}\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n\n  <div className=\"CommentList\">\n    {comments && comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      {post.title\n        && (\n        <h3 className=\"PostInfo__title\">\n          {post.title}\n        </h3>\n        )}\n      <p>\n        {' Posted by  '}\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    {post.comments.length > 0\n      ? (\n        <CommentList comments={post.comments} />\n      )\n      : (\n        <>\n          <hr />\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts && posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getComments(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}